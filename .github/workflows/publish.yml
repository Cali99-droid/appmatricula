name: publish
on:
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']
jobs:
  create-docker-image:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Login to github Containeer Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.TOKEN_APIENROLL}}
      - name: Build the image
        run: |
          docker build --target prod . --tag ghcr.io/cali99-droid/appmatricula:latest --tag ghcr.io/cali99-droid/appmatricula:${GITHUB_SHA}
          docker push ghcr.io/cali99-droid/appmatricula:latest
          docker push ghcr.io/cali99-droid/appmatricula:${GITHUB_SHA}
  deploy:
    needs: create-docker-image
    runs-on: ubuntu-20.04
    steps:
      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOSTNAME }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      - name: SSH into Server and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.HOSTNAME }} <<EOF
          cd matdocker
          docker login ghcr.io -u cali99-droid -p ${{ secrets.TOKEN_APIENROLL }}
          docker pull ghcr.io/cali99-droid/appmatricula:latest
          docker stop appmatricula || true
          docker rm appmatricula || true
          docker run -d \
            --name appmatricula \
            -p 3000:4000 \
            -v /home/ubuntu/matdocker/api_vol:/app/api-vol \
            -w /app \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            --restart always \
            ghcr.io/cali99-droid/appmatricula:latest
          EOF
